/*
    Игра «Автомобильные гонки»
Разработать игру "Автомобильные гонки" с использованием делегатов.
1. В игре использовать несколько типов автомобилей: спортивные, легковые, грузовые и автобусы.
2. Принцип игры: автомобили двигаются от старта к финишу со скоростями, которые изменяются в установленных пределах случайным образом. Победителем считается автомобиль, пришедший к финишу первым.
Рекомендации по реализации игры
1. Разработать абстрактный класс «автомобиль» (класс Car). Собрать в нем все общие поля, свойства (например, скорость) и методы (например, ехать).
2. Разработать классы автомобилей с конкретной реализацией конструкторов, свойств и методов. В классы автомобилей добавить необходимые события (например, финиш).
3. Класс игры должен производить запуск соревнований автомобилей, выводить сообщения о текущем положении автомобилей, выводить сообщение об автомобиле, победившем в гонках.
4. Создать делегаты, обеспечивающие вызов методов из классов автомобилей (например, выйти на старт, начать гонку).
5. Игра заканчивается, когда какой-то из автомобилей проехал определенное расстояние (старт в положении 0, финиш в положении 100). Уведомление об окончании гонки (прибытии какого-либо автомобиля на финиш) реализовать с помощью событий.
*/

using CS_CarRace;
using System;


namespace Delegate
{

    public delegate int CarRaceStateHandler();

    class Program
    {
        static void Main(string[] args)
        {
            Truck racer1 = new();
            SchoolBus racer2 = new();
            Roadster racer3 = new();
            Sedan racer4 = new();

            racer1.Start += GetSpeed;
            racer2.Start += GetSpeed;
            racer3.Start += GetSpeed;
            racer4.Start += GetSpeed;

            racer1.Finish += Stop;
            racer2.Finish += Stop;
            racer3.Finish += Stop;
            racer4.Finish += Stop;


            while (true)
            {
                Console.Clear();
                racer1.Drive();
                racer2.Drive();
                racer3.Drive();
                racer4.Drive();
            }

        }

        private static int GetSpeed()
        {
            Random rnd = new Random();
            int _speed = rnd.Next(0, 2);
            return _speed;
        }

        private static int Stop()
        {
            int _speed = 0;
            return _speed;
        }

    }
}


